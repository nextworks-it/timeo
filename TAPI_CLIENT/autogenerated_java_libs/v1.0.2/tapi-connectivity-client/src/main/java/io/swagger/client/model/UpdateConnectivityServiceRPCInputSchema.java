/**
 * tapi-connectivity API
 * tapi-connectivity API generated from tapi-connectivity@2018-12-10.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ConnectivityConstraint;
import io.swagger.client.model.ConnectivityServiceEndPoint;
import io.swagger.client.model.ResilienceConstraint;
import io.swagger.client.model.RoutingConstraint;
import io.swagger.client.model.TopologyConstraint;
import java.util.ArrayList;
import java.util.List;


/**
 * UpdateConnectivityServiceRPCInputSchema
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-09T12:42:21.668+02:00")
public class UpdateConnectivityServiceRPCInputSchema   {
  @SerializedName("resilience-constraint")
  private ResilienceConstraint resilienceConstraint = null;

  @SerializedName("topology-constraint")
  private TopologyConstraint topologyConstraint = null;

  @SerializedName("service-id-or-name")
  private String serviceIdOrName = null;

  @SerializedName("connectivity-constraint")
  private ConnectivityConstraint connectivityConstraint = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("end-point")
  private List<ConnectivityServiceEndPoint> endPoint = new ArrayList<ConnectivityServiceEndPoint>();

  @SerializedName("routing-constraint")
  private RoutingConstraint routingConstraint = null;

  public UpdateConnectivityServiceRPCInputSchema resilienceConstraint(ResilienceConstraint resilienceConstraint) {
    this.resilienceConstraint = resilienceConstraint;
    return this;
  }

   /**
   * Get resilienceConstraint
   * @return resilienceConstraint
  **/
  @ApiModelProperty(example = "null", value = "")
  public ResilienceConstraint getResilienceConstraint() {
    return resilienceConstraint;
  }

  public void setResilienceConstraint(ResilienceConstraint resilienceConstraint) {
    this.resilienceConstraint = resilienceConstraint;
  }

  public UpdateConnectivityServiceRPCInputSchema topologyConstraint(TopologyConstraint topologyConstraint) {
    this.topologyConstraint = topologyConstraint;
    return this;
  }

   /**
   * Get topologyConstraint
   * @return topologyConstraint
  **/
  @ApiModelProperty(example = "null", value = "")
  public TopologyConstraint getTopologyConstraint() {
    return topologyConstraint;
  }

  public void setTopologyConstraint(TopologyConstraint topologyConstraint) {
    this.topologyConstraint = topologyConstraint;
  }

  public UpdateConnectivityServiceRPCInputSchema serviceIdOrName(String serviceIdOrName) {
    this.serviceIdOrName = serviceIdOrName;
    return this;
  }

   /**
   * Get serviceIdOrName
   * @return serviceIdOrName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getServiceIdOrName() {
    return serviceIdOrName;
  }

  public void setServiceIdOrName(String serviceIdOrName) {
    this.serviceIdOrName = serviceIdOrName;
  }

  public UpdateConnectivityServiceRPCInputSchema connectivityConstraint(ConnectivityConstraint connectivityConstraint) {
    this.connectivityConstraint = connectivityConstraint;
    return this;
  }

   /**
   * Get connectivityConstraint
   * @return connectivityConstraint
  **/
  @ApiModelProperty(example = "null", value = "")
  public ConnectivityConstraint getConnectivityConstraint() {
    return connectivityConstraint;
  }

  public void setConnectivityConstraint(ConnectivityConstraint connectivityConstraint) {
    this.connectivityConstraint = connectivityConstraint;
  }

  public UpdateConnectivityServiceRPCInputSchema state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public UpdateConnectivityServiceRPCInputSchema endPoint(List<ConnectivityServiceEndPoint> endPoint) {
    this.endPoint = endPoint;
    return this;
  }

  public UpdateConnectivityServiceRPCInputSchema addEndPointItem(ConnectivityServiceEndPoint endPointItem) {
    this.endPoint.add(endPointItem);
    return this;
  }

   /**
   * Get endPoint
   * @return endPoint
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<ConnectivityServiceEndPoint> getEndPoint() {
    return endPoint;
  }

  public void setEndPoint(List<ConnectivityServiceEndPoint> endPoint) {
    this.endPoint = endPoint;
  }

  public UpdateConnectivityServiceRPCInputSchema routingConstraint(RoutingConstraint routingConstraint) {
    this.routingConstraint = routingConstraint;
    return this;
  }

   /**
   * Get routingConstraint
   * @return routingConstraint
  **/
  @ApiModelProperty(example = "null", value = "")
  public RoutingConstraint getRoutingConstraint() {
    return routingConstraint;
  }

  public void setRoutingConstraint(RoutingConstraint routingConstraint) {
    this.routingConstraint = routingConstraint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateConnectivityServiceRPCInputSchema updateConnectivityServiceRPCInputSchema = (UpdateConnectivityServiceRPCInputSchema) o;
    return Objects.equals(this.resilienceConstraint, updateConnectivityServiceRPCInputSchema.resilienceConstraint) &&
        Objects.equals(this.topologyConstraint, updateConnectivityServiceRPCInputSchema.topologyConstraint) &&
        Objects.equals(this.serviceIdOrName, updateConnectivityServiceRPCInputSchema.serviceIdOrName) &&
        Objects.equals(this.connectivityConstraint, updateConnectivityServiceRPCInputSchema.connectivityConstraint) &&
        Objects.equals(this.state, updateConnectivityServiceRPCInputSchema.state) &&
        Objects.equals(this.endPoint, updateConnectivityServiceRPCInputSchema.endPoint) &&
        Objects.equals(this.routingConstraint, updateConnectivityServiceRPCInputSchema.routingConstraint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resilienceConstraint, topologyConstraint, serviceIdOrName, connectivityConstraint, state, endPoint, routingConstraint);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateConnectivityServiceRPCInputSchema {\n");
    
    sb.append("    resilienceConstraint: ").append(toIndentedString(resilienceConstraint)).append("\n");
    sb.append("    topologyConstraint: ").append(toIndentedString(topologyConstraint)).append("\n");
    sb.append("    serviceIdOrName: ").append(toIndentedString(serviceIdOrName)).append("\n");
    sb.append("    connectivityConstraint: ").append(toIndentedString(connectivityConstraint)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    endPoint: ").append(toIndentedString(endPoint)).append("\n");
    sb.append("    routingConstraint: ").append(toIndentedString(routingConstraint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

