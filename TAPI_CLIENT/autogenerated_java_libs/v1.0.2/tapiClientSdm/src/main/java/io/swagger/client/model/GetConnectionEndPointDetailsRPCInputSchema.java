/*
 * tapi-sdm API
 * tapi-sdm API generated from tapi-sdm.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GetConnectionEndPointDetailsRPCInputSchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-09T13:10:07.918+02:00")
public class GetConnectionEndPointDetailsRPCInputSchema {
  @SerializedName("nep-id-or-name")
  private String nepIdOrName = null;

  @SerializedName("topology-id-or-name")
  private String topologyIdOrName = null;

  @SerializedName("node-id-or-name")
  private String nodeIdOrName = null;

  @SerializedName("cep-id-or-name")
  private String cepIdOrName = null;

  public GetConnectionEndPointDetailsRPCInputSchema nepIdOrName(String nepIdOrName) {
    this.nepIdOrName = nepIdOrName;
    return this;
  }

   /**
   * Get nepIdOrName
   * @return nepIdOrName
  **/
  @ApiModelProperty(value = "")
  public String getNepIdOrName() {
    return nepIdOrName;
  }

  public void setNepIdOrName(String nepIdOrName) {
    this.nepIdOrName = nepIdOrName;
  }

  public GetConnectionEndPointDetailsRPCInputSchema topologyIdOrName(String topologyIdOrName) {
    this.topologyIdOrName = topologyIdOrName;
    return this;
  }

   /**
   * Get topologyIdOrName
   * @return topologyIdOrName
  **/
  @ApiModelProperty(value = "")
  public String getTopologyIdOrName() {
    return topologyIdOrName;
  }

  public void setTopologyIdOrName(String topologyIdOrName) {
    this.topologyIdOrName = topologyIdOrName;
  }

  public GetConnectionEndPointDetailsRPCInputSchema nodeIdOrName(String nodeIdOrName) {
    this.nodeIdOrName = nodeIdOrName;
    return this;
  }

   /**
   * Get nodeIdOrName
   * @return nodeIdOrName
  **/
  @ApiModelProperty(value = "")
  public String getNodeIdOrName() {
    return nodeIdOrName;
  }

  public void setNodeIdOrName(String nodeIdOrName) {
    this.nodeIdOrName = nodeIdOrName;
  }

  public GetConnectionEndPointDetailsRPCInputSchema cepIdOrName(String cepIdOrName) {
    this.cepIdOrName = cepIdOrName;
    return this;
  }

   /**
   * Get cepIdOrName
   * @return cepIdOrName
  **/
  @ApiModelProperty(value = "")
  public String getCepIdOrName() {
    return cepIdOrName;
  }

  public void setCepIdOrName(String cepIdOrName) {
    this.cepIdOrName = cepIdOrName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetConnectionEndPointDetailsRPCInputSchema getConnectionEndPointDetailsRPCInputSchema = (GetConnectionEndPointDetailsRPCInputSchema) o;
    return Objects.equals(this.nepIdOrName, getConnectionEndPointDetailsRPCInputSchema.nepIdOrName) &&
        Objects.equals(this.topologyIdOrName, getConnectionEndPointDetailsRPCInputSchema.topologyIdOrName) &&
        Objects.equals(this.nodeIdOrName, getConnectionEndPointDetailsRPCInputSchema.nodeIdOrName) &&
        Objects.equals(this.cepIdOrName, getConnectionEndPointDetailsRPCInputSchema.cepIdOrName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nepIdOrName, topologyIdOrName, nodeIdOrName, cepIdOrName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetConnectionEndPointDetailsRPCInputSchema {\n");
    
    sb.append("    nepIdOrName: ").append(toIndentedString(nepIdOrName)).append("\n");
    sb.append("    topologyIdOrName: ").append(toIndentedString(topologyIdOrName)).append("\n");
    sb.append("    nodeIdOrName: ").append(toIndentedString(nodeIdOrName)).append("\n");
    sb.append("    cepIdOrName: ").append(toIndentedString(cepIdOrName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

