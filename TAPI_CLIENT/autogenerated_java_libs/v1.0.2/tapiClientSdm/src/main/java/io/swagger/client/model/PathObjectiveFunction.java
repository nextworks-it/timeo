/*
 * tapi-sdm API
 * tapi-sdm API generated from tapi-sdm.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LocalClass;
import io.swagger.client.model.NameAndValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * PathObjectiveFunction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-09T13:10:07.918+02:00")
public class PathObjectiveFunction {
  @SerializedName("local-id")
  private String localId = null;

  @SerializedName("name")
  private List<NameAndValue> name = null;

  @SerializedName("concurrent-paths")
  private String concurrentPaths = null;

  @SerializedName("link-utilization")
  private String linkUtilization = null;

  @SerializedName("bandwidth-optimization")
  private String bandwidthOptimization = null;

  @SerializedName("cost-optimization")
  private String costOptimization = null;

  @SerializedName("resource-sharing")
  private String resourceSharing = null;

  public PathObjectiveFunction localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @ApiModelProperty(value = "")
  public String getLocalId() {
    return localId;
  }

  public void setLocalId(String localId) {
    this.localId = localId;
  }

  public PathObjectiveFunction name(List<NameAndValue> name) {
    this.name = name;
    return this;
  }

  public PathObjectiveFunction addNameItem(NameAndValue nameItem) {
    if (this.name == null) {
      this.name = new ArrayList<NameAndValue>();
    }
    this.name.add(nameItem);
    return this;
  }

   /**
   * List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.
   * @return name
  **/
  @ApiModelProperty(value = "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.")
  public List<NameAndValue> getName() {
    return name;
  }

  public void setName(List<NameAndValue> name) {
    this.name = name;
  }

  public PathObjectiveFunction concurrentPaths(String concurrentPaths) {
    this.concurrentPaths = concurrentPaths;
    return this;
  }

   /**
   * Get concurrentPaths
   * @return concurrentPaths
  **/
  @ApiModelProperty(value = "")
  public String getConcurrentPaths() {
    return concurrentPaths;
  }

  public void setConcurrentPaths(String concurrentPaths) {
    this.concurrentPaths = concurrentPaths;
  }

  public PathObjectiveFunction linkUtilization(String linkUtilization) {
    this.linkUtilization = linkUtilization;
    return this;
  }

   /**
   * Get linkUtilization
   * @return linkUtilization
  **/
  @ApiModelProperty(value = "")
  public String getLinkUtilization() {
    return linkUtilization;
  }

  public void setLinkUtilization(String linkUtilization) {
    this.linkUtilization = linkUtilization;
  }

  public PathObjectiveFunction bandwidthOptimization(String bandwidthOptimization) {
    this.bandwidthOptimization = bandwidthOptimization;
    return this;
  }

   /**
   * Get bandwidthOptimization
   * @return bandwidthOptimization
  **/
  @ApiModelProperty(value = "")
  public String getBandwidthOptimization() {
    return bandwidthOptimization;
  }

  public void setBandwidthOptimization(String bandwidthOptimization) {
    this.bandwidthOptimization = bandwidthOptimization;
  }

  public PathObjectiveFunction costOptimization(String costOptimization) {
    this.costOptimization = costOptimization;
    return this;
  }

   /**
   * Get costOptimization
   * @return costOptimization
  **/
  @ApiModelProperty(value = "")
  public String getCostOptimization() {
    return costOptimization;
  }

  public void setCostOptimization(String costOptimization) {
    this.costOptimization = costOptimization;
  }

  public PathObjectiveFunction resourceSharing(String resourceSharing) {
    this.resourceSharing = resourceSharing;
    return this;
  }

   /**
   * Get resourceSharing
   * @return resourceSharing
  **/
  @ApiModelProperty(value = "")
  public String getResourceSharing() {
    return resourceSharing;
  }

  public void setResourceSharing(String resourceSharing) {
    this.resourceSharing = resourceSharing;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PathObjectiveFunction pathObjectiveFunction = (PathObjectiveFunction) o;
    return Objects.equals(this.localId, pathObjectiveFunction.localId) &&
        Objects.equals(this.name, pathObjectiveFunction.name) &&
        Objects.equals(this.concurrentPaths, pathObjectiveFunction.concurrentPaths) &&
        Objects.equals(this.linkUtilization, pathObjectiveFunction.linkUtilization) &&
        Objects.equals(this.bandwidthOptimization, pathObjectiveFunction.bandwidthOptimization) &&
        Objects.equals(this.costOptimization, pathObjectiveFunction.costOptimization) &&
        Objects.equals(this.resourceSharing, pathObjectiveFunction.resourceSharing);
  }

  @Override
  public int hashCode() {
    return Objects.hash(localId, name, concurrentPaths, linkUtilization, bandwidthOptimization, costOptimization, resourceSharing);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PathObjectiveFunction {\n");
    
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    concurrentPaths: ").append(toIndentedString(concurrentPaths)).append("\n");
    sb.append("    linkUtilization: ").append(toIndentedString(linkUtilization)).append("\n");
    sb.append("    bandwidthOptimization: ").append(toIndentedString(bandwidthOptimization)).append("\n");
    sb.append("    costOptimization: ").append(toIndentedString(costOptimization)).append("\n");
    sb.append("    resourceSharing: ").append(toIndentedString(resourceSharing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

