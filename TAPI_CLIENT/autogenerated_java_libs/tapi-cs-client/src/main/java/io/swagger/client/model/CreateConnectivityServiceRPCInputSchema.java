/*
 * tapi-connectivity API
 * tapi-connectivity API generated from tapi-connectivity@2018-03-07.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ConnectivityConstraint;
import io.swagger.client.model.ConnectivityServiceEndPoint;
import io.swagger.client.model.ResilienceConstraint;
import io.swagger.client.model.TopologyConstraint;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateConnectivityServiceRPCInputSchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-07T13:54:22.249+02:00")
public class CreateConnectivityServiceRPCInputSchema {
  @SerializedName("resilience-constraint")
  private List<ResilienceConstraint> resilienceConstraint = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("end-point")
  private List<ConnectivityServiceEndPoint> endPoint = null;

  @SerializedName("conn-constraint")
  private ConnectivityConstraint connConstraint = null;

  @SerializedName("topo-constraint")
  private TopologyConstraint topoConstraint = null;

  public CreateConnectivityServiceRPCInputSchema resilienceConstraint(List<ResilienceConstraint> resilienceConstraint) {
    this.resilienceConstraint = resilienceConstraint;
    return this;
  }

  public CreateConnectivityServiceRPCInputSchema addResilienceConstraintItem(ResilienceConstraint resilienceConstraintItem) {
    if (this.resilienceConstraint == null) {
      this.resilienceConstraint = new ArrayList<ResilienceConstraint>();
    }
    this.resilienceConstraint.add(resilienceConstraintItem);
    return this;
  }

   /**
   * Get resilienceConstraint
   * @return resilienceConstraint
  **/
  @ApiModelProperty(value = "")
  public List<ResilienceConstraint> getResilienceConstraint() {
    return resilienceConstraint;
  }

  public void setResilienceConstraint(List<ResilienceConstraint> resilienceConstraint) {
    this.resilienceConstraint = resilienceConstraint;
  }

  public CreateConnectivityServiceRPCInputSchema state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public CreateConnectivityServiceRPCInputSchema endPoint(List<ConnectivityServiceEndPoint> endPoint) {
    this.endPoint = endPoint;
    return this;
  }

  public CreateConnectivityServiceRPCInputSchema addEndPointItem(ConnectivityServiceEndPoint endPointItem) {
    if (this.endPoint == null) {
      this.endPoint = new ArrayList<ConnectivityServiceEndPoint>();
    }
    this.endPoint.add(endPointItem);
    return this;
  }

   /**
   * Get endPoint
   * @return endPoint
  **/
  @ApiModelProperty(value = "")
  public List<ConnectivityServiceEndPoint> getEndPoint() {
    return endPoint;
  }

  public void setEndPoint(List<ConnectivityServiceEndPoint> endPoint) {
    this.endPoint = endPoint;
  }

  public CreateConnectivityServiceRPCInputSchema connConstraint(ConnectivityConstraint connConstraint) {
    this.connConstraint = connConstraint;
    return this;
  }

   /**
   * Get connConstraint
   * @return connConstraint
  **/
  @ApiModelProperty(value = "")
  public ConnectivityConstraint getConnConstraint() {
    return connConstraint;
  }

  public void setConnConstraint(ConnectivityConstraint connConstraint) {
    this.connConstraint = connConstraint;
  }

  public CreateConnectivityServiceRPCInputSchema topoConstraint(TopologyConstraint topoConstraint) {
    this.topoConstraint = topoConstraint;
    return this;
  }

   /**
   * Get topoConstraint
   * @return topoConstraint
  **/
  @ApiModelProperty(value = "")
  public TopologyConstraint getTopoConstraint() {
    return topoConstraint;
  }

  public void setTopoConstraint(TopologyConstraint topoConstraint) {
    this.topoConstraint = topoConstraint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateConnectivityServiceRPCInputSchema createConnectivityServiceRPCInputSchema = (CreateConnectivityServiceRPCInputSchema) o;
    return Objects.equals(this.resilienceConstraint, createConnectivityServiceRPCInputSchema.resilienceConstraint) &&
        Objects.equals(this.state, createConnectivityServiceRPCInputSchema.state) &&
        Objects.equals(this.endPoint, createConnectivityServiceRPCInputSchema.endPoint) &&
        Objects.equals(this.connConstraint, createConnectivityServiceRPCInputSchema.connConstraint) &&
        Objects.equals(this.topoConstraint, createConnectivityServiceRPCInputSchema.topoConstraint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resilienceConstraint, state, endPoint, connConstraint, topoConstraint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateConnectivityServiceRPCInputSchema {\n");
    
    sb.append("    resilienceConstraint: ").append(toIndentedString(resilienceConstraint)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    endPoint: ").append(toIndentedString(endPoint)).append("\n");
    sb.append("    connConstraint: ").append(toIndentedString(connConstraint)).append("\n");
    sb.append("    topoConstraint: ").append(toIndentedString(topoConstraint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

