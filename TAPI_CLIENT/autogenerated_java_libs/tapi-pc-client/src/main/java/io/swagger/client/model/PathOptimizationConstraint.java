/*
 * tapi-path-computation API
 * tapi-path-computation API generated from tapi-path-computation@2018-03-07.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LocalClass;
import io.swagger.client.model.NameAndValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * PathOptimizationConstraint
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-07T13:54:55.433+02:00")
public class PathOptimizationConstraint {
  @SerializedName("local-id")
  private String localId = null;

  @SerializedName("name")
  private List<NameAndValue> name = null;

  /**
   * Gets or Sets trafficInterruption
   */
  @JsonAdapter(TrafficInterruptionEnum.Adapter.class)
  public enum TrafficInterruptionEnum {
    MINIMIZE("MINIMIZE"),
    
    MAXIMIZE("MAXIMIZE"),
    
    ALLOW("ALLOW"),
    
    DISALLOW("DISALLOW"),
    
    DONT_CARE("DONT_CARE");

    private String value;

    TrafficInterruptionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TrafficInterruptionEnum fromValue(String text) {
      for (TrafficInterruptionEnum b : TrafficInterruptionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TrafficInterruptionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TrafficInterruptionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TrafficInterruptionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TrafficInterruptionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("traffic-interruption")
  private TrafficInterruptionEnum trafficInterruption = null;

  public PathOptimizationConstraint localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @ApiModelProperty(value = "")
  public String getLocalId() {
    return localId;
  }

  public void setLocalId(String localId) {
    this.localId = localId;
  }

  public PathOptimizationConstraint name(List<NameAndValue> name) {
    this.name = name;
    return this;
  }

  public PathOptimizationConstraint addNameItem(NameAndValue nameItem) {
    if (this.name == null) {
      this.name = new ArrayList<NameAndValue>();
    }
    this.name.add(nameItem);
    return this;
  }

   /**
   * List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.
   * @return name
  **/
  @ApiModelProperty(value = "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.")
  public List<NameAndValue> getName() {
    return name;
  }

  public void setName(List<NameAndValue> name) {
    this.name = name;
  }

  public PathOptimizationConstraint trafficInterruption(TrafficInterruptionEnum trafficInterruption) {
    this.trafficInterruption = trafficInterruption;
    return this;
  }

   /**
   * Get trafficInterruption
   * @return trafficInterruption
  **/
  @ApiModelProperty(value = "")
  public TrafficInterruptionEnum getTrafficInterruption() {
    return trafficInterruption;
  }

  public void setTrafficInterruption(TrafficInterruptionEnum trafficInterruption) {
    this.trafficInterruption = trafficInterruption;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PathOptimizationConstraint pathOptimizationConstraint = (PathOptimizationConstraint) o;
    return Objects.equals(this.localId, pathOptimizationConstraint.localId) &&
        Objects.equals(this.name, pathOptimizationConstraint.name) &&
        Objects.equals(this.trafficInterruption, pathOptimizationConstraint.trafficInterruption);
  }

  @Override
  public int hashCode() {
    return Objects.hash(localId, name, trafficInterruption);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PathOptimizationConstraint {\n");
    
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    trafficInterruption: ").append(toIndentedString(trafficInterruption)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

