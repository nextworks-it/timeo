/*
 * tapi-path-computation API
 * tapi-path-computation API generated from tapi-path-computation@2018-03-07.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.PathObjectiveFunction;
import io.swagger.client.model.PathServiceEndPoint;
import io.swagger.client.model.RoutingConstraint;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ComputeP2PPathRPCInputSchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-07T13:54:55.433+02:00")
public class ComputeP2PPathRPCInputSchema {
  @SerializedName("routing-constraint")
  private RoutingConstraint routingConstraint = null;

  @SerializedName("objective-function")
  private PathObjectiveFunction objectiveFunction = null;

  @SerializedName("sep")
  private List<PathServiceEndPoint> sep = null;

  public ComputeP2PPathRPCInputSchema routingConstraint(RoutingConstraint routingConstraint) {
    this.routingConstraint = routingConstraint;
    return this;
  }

   /**
   * Get routingConstraint
   * @return routingConstraint
  **/
  @ApiModelProperty(value = "")
  public RoutingConstraint getRoutingConstraint() {
    return routingConstraint;
  }

  public void setRoutingConstraint(RoutingConstraint routingConstraint) {
    this.routingConstraint = routingConstraint;
  }

  public ComputeP2PPathRPCInputSchema objectiveFunction(PathObjectiveFunction objectiveFunction) {
    this.objectiveFunction = objectiveFunction;
    return this;
  }

   /**
   * Get objectiveFunction
   * @return objectiveFunction
  **/
  @ApiModelProperty(value = "")
  public PathObjectiveFunction getObjectiveFunction() {
    return objectiveFunction;
  }

  public void setObjectiveFunction(PathObjectiveFunction objectiveFunction) {
    this.objectiveFunction = objectiveFunction;
  }

  public ComputeP2PPathRPCInputSchema sep(List<PathServiceEndPoint> sep) {
    this.sep = sep;
    return this;
  }

  public ComputeP2PPathRPCInputSchema addSepItem(PathServiceEndPoint sepItem) {
    if (this.sep == null) {
      this.sep = new ArrayList<PathServiceEndPoint>();
    }
    this.sep.add(sepItem);
    return this;
  }

   /**
   * Get sep
   * @return sep
  **/
  @ApiModelProperty(value = "")
  public List<PathServiceEndPoint> getSep() {
    return sep;
  }

  public void setSep(List<PathServiceEndPoint> sep) {
    this.sep = sep;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComputeP2PPathRPCInputSchema computeP2PPathRPCInputSchema = (ComputeP2PPathRPCInputSchema) o;
    return Objects.equals(this.routingConstraint, computeP2PPathRPCInputSchema.routingConstraint) &&
        Objects.equals(this.objectiveFunction, computeP2PPathRPCInputSchema.objectiveFunction) &&
        Objects.equals(this.sep, computeP2PPathRPCInputSchema.sep);
  }

  @Override
  public int hashCode() {
    return Objects.hash(routingConstraint, objectiveFunction, sep);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComputeP2PPathRPCInputSchema {\n");
    
    sb.append("    routingConstraint: ").append(toIndentedString(routingConstraint)).append("\n");
    sb.append("    objectiveFunction: ").append(toIndentedString(objectiveFunction)).append("\n");
    sb.append("    sep: ").append(toIndentedString(sep)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

