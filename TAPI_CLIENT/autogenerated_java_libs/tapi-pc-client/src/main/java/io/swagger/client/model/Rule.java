/*
 * tapi-path-computation API
 * tapi-path-computation API generated from tapi-path-computation@2018-03-07.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LocalClass;
import io.swagger.client.model.NameAndValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Rule
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-07T13:54:55.433+02:00")
public class Rule {
  @SerializedName("local-id")
  private String localId = null;

  @SerializedName("name")
  private List<NameAndValue> name = null;

  @SerializedName("rule-type")
  private String ruleType = null;

  @SerializedName("forwarding-rule")
  private String forwardingRule = null;

  @SerializedName("override-priority")
  private String overridePriority = null;

  public Rule localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @ApiModelProperty(value = "")
  public String getLocalId() {
    return localId;
  }

  public void setLocalId(String localId) {
    this.localId = localId;
  }

  public Rule name(List<NameAndValue> name) {
    this.name = name;
    return this;
  }

  public Rule addNameItem(NameAndValue nameItem) {
    if (this.name == null) {
      this.name = new ArrayList<NameAndValue>();
    }
    this.name.add(nameItem);
    return this;
  }

   /**
   * List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.
   * @return name
  **/
  @ApiModelProperty(value = "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.")
  public List<NameAndValue> getName() {
    return name;
  }

  public void setName(List<NameAndValue> name) {
    this.name = name;
  }

  public Rule ruleType(String ruleType) {
    this.ruleType = ruleType;
    return this;
  }

   /**
   * Get ruleType
   * @return ruleType
  **/
  @ApiModelProperty(value = "")
  public String getRuleType() {
    return ruleType;
  }

  public void setRuleType(String ruleType) {
    this.ruleType = ruleType;
  }

  public Rule forwardingRule(String forwardingRule) {
    this.forwardingRule = forwardingRule;
    return this;
  }

   /**
   * Get forwardingRule
   * @return forwardingRule
  **/
  @ApiModelProperty(value = "")
  public String getForwardingRule() {
    return forwardingRule;
  }

  public void setForwardingRule(String forwardingRule) {
    this.forwardingRule = forwardingRule;
  }

  public Rule overridePriority(String overridePriority) {
    this.overridePriority = overridePriority;
    return this;
  }

   /**
   * Get overridePriority
   * @return overridePriority
  **/
  @ApiModelProperty(value = "")
  public String getOverridePriority() {
    return overridePriority;
  }

  public void setOverridePriority(String overridePriority) {
    this.overridePriority = overridePriority;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rule rule = (Rule) o;
    return Objects.equals(this.localId, rule.localId) &&
        Objects.equals(this.name, rule.name) &&
        Objects.equals(this.ruleType, rule.ruleType) &&
        Objects.equals(this.forwardingRule, rule.forwardingRule) &&
        Objects.equals(this.overridePriority, rule.overridePriority);
  }

  @Override
  public int hashCode() {
    return Objects.hash(localId, name, ruleType, forwardingRule, overridePriority);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rule {\n");
    
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ruleType: ").append(toIndentedString(ruleType)).append("\n");
    sb.append("    forwardingRule: ").append(toIndentedString(forwardingRule)).append("\n");
    sb.append("    overridePriority: ").append(toIndentedString(overridePriority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

