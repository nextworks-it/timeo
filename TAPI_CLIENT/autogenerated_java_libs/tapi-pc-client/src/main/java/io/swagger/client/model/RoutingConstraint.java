/*
 * tapi-path-computation API
 * tapi-path-computation API generated from tapi-path-computation@2018-03-07.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Capacity;
import io.swagger.client.model.CostCharacteristic;
import io.swagger.client.model.LatencyCharacteristic;
import io.swagger.client.model.LocalClass;
import io.swagger.client.model.NameAndValue;
import io.swagger.client.model.TopologyRef;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RoutingConstraint
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-07T13:54:55.433+02:00")
public class RoutingConstraint {
  @SerializedName("local-id")
  private String localId = null;

  @SerializedName("name")
  private List<NameAndValue> name = null;

  @SerializedName("requested-capacity")
  private Capacity requestedCapacity = null;

  @SerializedName("cost-characteristic")
  private List<CostCharacteristic> costCharacteristic = null;

  @SerializedName("service-level")
  private String serviceLevel = null;

  @SerializedName("avoid-topology")
  private List<TopologyRef> avoidTopology = null;

  @SerializedName("latency-characteristic")
  private List<LatencyCharacteristic> latencyCharacteristic = null;

  /**
   * Gets or Sets pathLayer
   */
  @JsonAdapter(PathLayerEnum.Adapter.class)
  public enum PathLayerEnum {
    OTSIA("OTSiA"),
    
    OCH("OCH"),
    
    OTU("OTU"),
    
    ODU("ODU"),
    
    ETH("ETH"),
    
    ETY("ETY"),
    
    SDM("SDM"),
    
    DSR("DSR");

    private String value;

    PathLayerEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PathLayerEnum fromValue(String text) {
      for (PathLayerEnum b : PathLayerEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PathLayerEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PathLayerEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PathLayerEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PathLayerEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("path-layer")
  private List<PathLayerEnum> pathLayer = null;

  @SerializedName("include-topology")
  private List<TopologyRef> includeTopology = null;

  public RoutingConstraint localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @ApiModelProperty(value = "")
  public String getLocalId() {
    return localId;
  }

  public void setLocalId(String localId) {
    this.localId = localId;
  }

  public RoutingConstraint name(List<NameAndValue> name) {
    this.name = name;
    return this;
  }

  public RoutingConstraint addNameItem(NameAndValue nameItem) {
    if (this.name == null) {
      this.name = new ArrayList<NameAndValue>();
    }
    this.name.add(nameItem);
    return this;
  }

   /**
   * List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.
   * @return name
  **/
  @ApiModelProperty(value = "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.")
  public List<NameAndValue> getName() {
    return name;
  }

  public void setName(List<NameAndValue> name) {
    this.name = name;
  }

  public RoutingConstraint requestedCapacity(Capacity requestedCapacity) {
    this.requestedCapacity = requestedCapacity;
    return this;
  }

   /**
   * Get requestedCapacity
   * @return requestedCapacity
  **/
  @ApiModelProperty(value = "")
  public Capacity getRequestedCapacity() {
    return requestedCapacity;
  }

  public void setRequestedCapacity(Capacity requestedCapacity) {
    this.requestedCapacity = requestedCapacity;
  }

  public RoutingConstraint costCharacteristic(List<CostCharacteristic> costCharacteristic) {
    this.costCharacteristic = costCharacteristic;
    return this;
  }

  public RoutingConstraint addCostCharacteristicItem(CostCharacteristic costCharacteristicItem) {
    if (this.costCharacteristic == null) {
      this.costCharacteristic = new ArrayList<CostCharacteristic>();
    }
    this.costCharacteristic.add(costCharacteristicItem);
    return this;
  }

   /**
   * The list of costs where each cost relates to some aspect of the TopologicalEntity.
   * @return costCharacteristic
  **/
  @ApiModelProperty(value = "The list of costs where each cost relates to some aspect of the TopologicalEntity.")
  public List<CostCharacteristic> getCostCharacteristic() {
    return costCharacteristic;
  }

  public void setCostCharacteristic(List<CostCharacteristic> costCharacteristic) {
    this.costCharacteristic = costCharacteristic;
  }

  public RoutingConstraint serviceLevel(String serviceLevel) {
    this.serviceLevel = serviceLevel;
    return this;
  }

   /**
   * An abstract value the meaning of which is mutually agreed – typically represents metrics such as - Class of service, priority, resiliency, availability
   * @return serviceLevel
  **/
  @ApiModelProperty(value = "An abstract value the meaning of which is mutually agreed – typically represents metrics such as - Class of service, priority, resiliency, availability")
  public String getServiceLevel() {
    return serviceLevel;
  }

  public void setServiceLevel(String serviceLevel) {
    this.serviceLevel = serviceLevel;
  }

  public RoutingConstraint avoidTopology(List<TopologyRef> avoidTopology) {
    this.avoidTopology = avoidTopology;
    return this;
  }

  public RoutingConstraint addAvoidTopologyItem(TopologyRef avoidTopologyItem) {
    if (this.avoidTopology == null) {
      this.avoidTopology = new ArrayList<TopologyRef>();
    }
    this.avoidTopology.add(avoidTopologyItem);
    return this;
  }

   /**
   * Get avoidTopology
   * @return avoidTopology
  **/
  @ApiModelProperty(value = "")
  public List<TopologyRef> getAvoidTopology() {
    return avoidTopology;
  }

  public void setAvoidTopology(List<TopologyRef> avoidTopology) {
    this.avoidTopology = avoidTopology;
  }

  public RoutingConstraint latencyCharacteristic(List<LatencyCharacteristic> latencyCharacteristic) {
    this.latencyCharacteristic = latencyCharacteristic;
    return this;
  }

  public RoutingConstraint addLatencyCharacteristicItem(LatencyCharacteristic latencyCharacteristicItem) {
    if (this.latencyCharacteristic == null) {
      this.latencyCharacteristic = new ArrayList<LatencyCharacteristic>();
    }
    this.latencyCharacteristic.add(latencyCharacteristicItem);
    return this;
  }

   /**
   * The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.
   * @return latencyCharacteristic
  **/
  @ApiModelProperty(value = "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.")
  public List<LatencyCharacteristic> getLatencyCharacteristic() {
    return latencyCharacteristic;
  }

  public void setLatencyCharacteristic(List<LatencyCharacteristic> latencyCharacteristic) {
    this.latencyCharacteristic = latencyCharacteristic;
  }

  public RoutingConstraint pathLayer(List<PathLayerEnum> pathLayer) {
    this.pathLayer = pathLayer;
    return this;
  }

  public RoutingConstraint addPathLayerItem(PathLayerEnum pathLayerItem) {
    if (this.pathLayer == null) {
      this.pathLayer = new ArrayList<PathLayerEnum>();
    }
    this.pathLayer.add(pathLayerItem);
    return this;
  }

   /**
   * Get pathLayer
   * @return pathLayer
  **/
  @ApiModelProperty(value = "")
  public List<PathLayerEnum> getPathLayer() {
    return pathLayer;
  }

  public void setPathLayer(List<PathLayerEnum> pathLayer) {
    this.pathLayer = pathLayer;
  }

  public RoutingConstraint includeTopology(List<TopologyRef> includeTopology) {
    this.includeTopology = includeTopology;
    return this;
  }

  public RoutingConstraint addIncludeTopologyItem(TopologyRef includeTopologyItem) {
    if (this.includeTopology == null) {
      this.includeTopology = new ArrayList<TopologyRef>();
    }
    this.includeTopology.add(includeTopologyItem);
    return this;
  }

   /**
   * Get includeTopology
   * @return includeTopology
  **/
  @ApiModelProperty(value = "")
  public List<TopologyRef> getIncludeTopology() {
    return includeTopology;
  }

  public void setIncludeTopology(List<TopologyRef> includeTopology) {
    this.includeTopology = includeTopology;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoutingConstraint routingConstraint = (RoutingConstraint) o;
    return Objects.equals(this.localId, routingConstraint.localId) &&
        Objects.equals(this.name, routingConstraint.name) &&
        Objects.equals(this.requestedCapacity, routingConstraint.requestedCapacity) &&
        Objects.equals(this.costCharacteristic, routingConstraint.costCharacteristic) &&
        Objects.equals(this.serviceLevel, routingConstraint.serviceLevel) &&
        Objects.equals(this.avoidTopology, routingConstraint.avoidTopology) &&
        Objects.equals(this.latencyCharacteristic, routingConstraint.latencyCharacteristic) &&
        Objects.equals(this.pathLayer, routingConstraint.pathLayer) &&
        Objects.equals(this.includeTopology, routingConstraint.includeTopology);
  }

  @Override
  public int hashCode() {
    return Objects.hash(localId, name, requestedCapacity, costCharacteristic, serviceLevel, avoidTopology, latencyCharacteristic, pathLayer, includeTopology);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoutingConstraint {\n");
    
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    requestedCapacity: ").append(toIndentedString(requestedCapacity)).append("\n");
    sb.append("    costCharacteristic: ").append(toIndentedString(costCharacteristic)).append("\n");
    sb.append("    serviceLevel: ").append(toIndentedString(serviceLevel)).append("\n");
    sb.append("    avoidTopology: ").append(toIndentedString(avoidTopology)).append("\n");
    sb.append("    latencyCharacteristic: ").append(toIndentedString(latencyCharacteristic)).append("\n");
    sb.append("    pathLayer: ").append(toIndentedString(pathLayer)).append("\n");
    sb.append("    includeTopology: ").append(toIndentedString(includeTopology)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

