/**
 * tapi-arof API
 * tapi-arof API generated from tapi-arof.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ConnectionEndPointRef;
import io.swagger.client.model.ConnectionRef;
import io.swagger.client.model.LinkRef;
import io.swagger.client.model.NameAndValue;
import io.swagger.client.model.OperationalStatePac;
import io.swagger.client.model.ResourceSpec;
import io.swagger.client.model.Route;
import io.swagger.client.model.SwitchControl;
import java.util.ArrayList;
import java.util.List;


/**
 * The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs and like the LTP supports any transport protocol including all circuit and packet forms. At the lowest level of recursion, a FC represents a cross-connection within an NE.
 */
@ApiModel(description = "The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs and like the LTP supports any transport protocol including all circuit and packet forms. At the lowest level of recursion, a FC represents a cross-connection within an NE.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-07T14:21:00.609+02:00")
public class Connection   {
  @SerializedName("lower-connection")
  private List<ConnectionRef> lowerConnection = new ArrayList<ConnectionRef>();

  /**
   * Gets or Sets direction
   */
  public enum DirectionEnum {
    @SerializedName("BIDIRECTIONAL")
    BIDIRECTIONAL("BIDIRECTIONAL"),
    
    @SerializedName("UNIDIRECTIONAL")
    UNIDIRECTIONAL("UNIDIRECTIONAL"),
    
    @SerializedName("UNDEFINED_OR_UNKNOWN")
    UNDEFINED_OR_UNKNOWN("UNDEFINED_OR_UNKNOWN");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("direction")
  private DirectionEnum direction = null;

  @SerializedName("route")
  private List<Route> route = new ArrayList<Route>();

  /**
   * Gets or Sets layerProtocolName
   */
  public enum LayerProtocolNameEnum {
    @SerializedName("ODU")
    ODU("ODU"),
    
    @SerializedName("ETH")
    ETH("ETH"),
    
    @SerializedName("DSR")
    DSR("DSR"),
    
    @SerializedName("PHOTONIC_MEDIA")
    PHOTONIC_MEDIA("PHOTONIC_MEDIA");

    private String value;

    LayerProtocolNameEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("layer-protocol-name")
  private LayerProtocolNameEnum layerProtocolName = null;

  @SerializedName("switch-control")
  private List<SwitchControl> switchControl = new ArrayList<SwitchControl>();

  @SerializedName("supported-client-link")
  private List<LinkRef> supportedClientLink = new ArrayList<LinkRef>();

  @SerializedName("connection-end-point")
  private List<ConnectionEndPointRef> connectionEndPoint = new ArrayList<ConnectionEndPointRef>();

  public Connection lowerConnection(List<ConnectionRef> lowerConnection) {
    this.lowerConnection = lowerConnection;
    return this;
  }

  public Connection addLowerConnectionItem(ConnectionRef lowerConnectionItem) {
    this.lowerConnection.add(lowerConnectionItem);
    return this;
  }

   /**
   * An Connection object supports a recursive aggregation relationship such that the internal construction of an Connection can be exposed as multiple lower level Connection objects (partitioning). Aggregation is used as for the Node/Topology  to allow changes in hierarchy. Connection aggregation reflects Node/Topology aggregation. The FC represents a Cross-Connection in an NE. The Cross-Connection in an NE is not necessarily the lowest level of FC partitioning.
   * @return lowerConnection
  **/
  @ApiModelProperty(example = "null", value = "An Connection object supports a recursive aggregation relationship such that the internal construction of an Connection can be exposed as multiple lower level Connection objects (partitioning). Aggregation is used as for the Node/Topology  to allow changes in hierarchy. Connection aggregation reflects Node/Topology aggregation. The FC represents a Cross-Connection in an NE. The Cross-Connection in an NE is not necessarily the lowest level of FC partitioning.")
  public List<ConnectionRef> getLowerConnection() {
    return lowerConnection;
  }

  public void setLowerConnection(List<ConnectionRef> lowerConnection) {
    this.lowerConnection = lowerConnection;
  }

  public Connection direction(DirectionEnum direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @ApiModelProperty(example = "null", value = "")
  public DirectionEnum getDirection() {
    return direction;
  }

  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }

  public Connection route(List<Route> route) {
    this.route = route;
    return this;
  }

  public Connection addRouteItem(Route routeItem) {
    this.route.add(routeItem);
    return this;
  }

   /**
   * Get route
   * @return route
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Route> getRoute() {
    return route;
  }

  public void setRoute(List<Route> route) {
    this.route = route;
  }

  public Connection layerProtocolName(LayerProtocolNameEnum layerProtocolName) {
    this.layerProtocolName = layerProtocolName;
    return this;
  }

   /**
   * Get layerProtocolName
   * @return layerProtocolName
  **/
  @ApiModelProperty(example = "null", value = "")
  public LayerProtocolNameEnum getLayerProtocolName() {
    return layerProtocolName;
  }

  public void setLayerProtocolName(LayerProtocolNameEnum layerProtocolName) {
    this.layerProtocolName = layerProtocolName;
  }

  public Connection switchControl(List<SwitchControl> switchControl) {
    this.switchControl = switchControl;
    return this;
  }

  public Connection addSwitchControlItem(SwitchControl switchControlItem) {
    this.switchControl.add(switchControlItem);
    return this;
  }

   /**
   * Get switchControl
   * @return switchControl
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<SwitchControl> getSwitchControl() {
    return switchControl;
  }

  public void setSwitchControl(List<SwitchControl> switchControl) {
    this.switchControl = switchControl;
  }

  public Connection supportedClientLink(List<LinkRef> supportedClientLink) {
    this.supportedClientLink = supportedClientLink;
    return this;
  }

  public Connection addSupportedClientLinkItem(LinkRef supportedClientLinkItem) {
    this.supportedClientLink.add(supportedClientLinkItem);
    return this;
  }

   /**
   * Get supportedClientLink
   * @return supportedClientLink
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<LinkRef> getSupportedClientLink() {
    return supportedClientLink;
  }

  public void setSupportedClientLink(List<LinkRef> supportedClientLink) {
    this.supportedClientLink = supportedClientLink;
  }

  public Connection connectionEndPoint(List<ConnectionEndPointRef> connectionEndPoint) {
    this.connectionEndPoint = connectionEndPoint;
    return this;
  }

  public Connection addConnectionEndPointItem(ConnectionEndPointRef connectionEndPointItem) {
    this.connectionEndPoint.add(connectionEndPointItem);
    return this;
  }

   /**
   * Get connectionEndPoint
   * @return connectionEndPoint
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<ConnectionEndPointRef> getConnectionEndPoint() {
    return connectionEndPoint;
  }

  public void setConnectionEndPoint(List<ConnectionEndPointRef> connectionEndPoint) {
    this.connectionEndPoint = connectionEndPoint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Connection connection = (Connection) o;
    return Objects.equals(this.lowerConnection, connection.lowerConnection) &&
        Objects.equals(this.direction, connection.direction) &&
        Objects.equals(this.route, connection.route) &&
        Objects.equals(this.layerProtocolName, connection.layerProtocolName) &&
        Objects.equals(this.switchControl, connection.switchControl) &&
        Objects.equals(this.supportedClientLink, connection.supportedClientLink) &&
        Objects.equals(this.connectionEndPoint, connection.connectionEndPoint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lowerConnection, direction, route, layerProtocolName, switchControl, supportedClientLink, connectionEndPoint);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Connection {\n");
    
    sb.append("    lowerConnection: ").append(toIndentedString(lowerConnection)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    route: ").append(toIndentedString(route)).append("\n");
    sb.append("    layerProtocolName: ").append(toIndentedString(layerProtocolName)).append("\n");
    sb.append("    switchControl: ").append(toIndentedString(switchControl)).append("\n");
    sb.append("    supportedClientLink: ").append(toIndentedString(supportedClientLink)).append("\n");
    sb.append("    connectionEndPoint: ").append(toIndentedString(connectionEndPoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

