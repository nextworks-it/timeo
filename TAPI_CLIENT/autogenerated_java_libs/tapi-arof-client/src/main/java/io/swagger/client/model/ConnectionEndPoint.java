/**
 * tapi-arof API
 * tapi-arof API generated from tapi-arof.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ConnectionEndPointRef;
import io.swagger.client.model.NameAndValue;
import io.swagger.client.model.NodeEdgePointRef;
import io.swagger.client.model.OperationalStatePac;
import io.swagger.client.model.ResourceSpec;
import io.swagger.client.model.TerminationPac;
import java.util.ArrayList;
import java.util.List;


/**
 * The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. The structure of LTP supports all transport protocols including circuit and packet forms.
 */
@ApiModel(description = "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. The structure of LTP supports all transport protocols including circuit and packet forms.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-07T14:21:00.609+02:00")
public class ConnectionEndPoint   {
  @SerializedName("layer-protocol-qualifier")
  private String layerProtocolQualifier = null;

  @SerializedName("client-node-edge-point")
  private List<NodeEdgePointRef> clientNodeEdgePoint = new ArrayList<NodeEdgePointRef>();

  /**
   * Gets or Sets layerProtocolName
   */
  public enum LayerProtocolNameEnum {
    @SerializedName("ODU")
    ODU("ODU"),
    
    @SerializedName("ETH")
    ETH("ETH"),
    
    @SerializedName("DSR")
    DSR("DSR"),
    
    @SerializedName("PHOTONIC_MEDIA")
    PHOTONIC_MEDIA("PHOTONIC_MEDIA");

    private String value;

    LayerProtocolNameEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("layer-protocol-name")
  private LayerProtocolNameEnum layerProtocolName = null;

  @SerializedName("aggregated-connection-end-point")
  private List<ConnectionEndPointRef> aggregatedConnectionEndPoint = new ArrayList<ConnectionEndPointRef>();

  /**
   * The orientation of defined flow at the EndPoint.
   */
  public enum ConnectionPortDirectionEnum {
    @SerializedName("BIDIRECTIONAL")
    BIDIRECTIONAL("BIDIRECTIONAL"),
    
    @SerializedName("INPUT")
    INPUT("INPUT"),
    
    @SerializedName("OUTPUT")
    OUTPUT("OUTPUT"),
    
    @SerializedName("UNIDENTIFIED_OR_UNKNOWN")
    UNIDENTIFIED_OR_UNKNOWN("UNIDENTIFIED_OR_UNKNOWN");

    private String value;

    ConnectionPortDirectionEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("connection-port-direction")
  private ConnectionPortDirectionEnum connectionPortDirection = null;

  @SerializedName("parent-node-edge-point")
  private NodeEdgePointRef parentNodeEdgePoint = null;

  /**
   * Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. 
   */
  public enum ConnectionPortRoleEnum {
    @SerializedName("SYMMETRIC")
    SYMMETRIC("SYMMETRIC"),
    
    @SerializedName("ROOT")
    ROOT("ROOT"),
    
    @SerializedName("LEAF")
    LEAF("LEAF"),
    
    @SerializedName("TRUNK")
    TRUNK("TRUNK"),
    
    @SerializedName("UNKNOWN")
    UNKNOWN("UNKNOWN");

    private String value;

    ConnectionPortRoleEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("connection-port-role")
  private ConnectionPortRoleEnum connectionPortRole = null;

  public ConnectionEndPoint layerProtocolQualifier(String layerProtocolQualifier) {
    this.layerProtocolQualifier = layerProtocolQualifier;
    return this;
  }

   /**
   * Get layerProtocolQualifier
   * @return layerProtocolQualifier
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLayerProtocolQualifier() {
    return layerProtocolQualifier;
  }

  public void setLayerProtocolQualifier(String layerProtocolQualifier) {
    this.layerProtocolQualifier = layerProtocolQualifier;
  }

  public ConnectionEndPoint clientNodeEdgePoint(List<NodeEdgePointRef> clientNodeEdgePoint) {
    this.clientNodeEdgePoint = clientNodeEdgePoint;
    return this;
  }

  public ConnectionEndPoint addClientNodeEdgePointItem(NodeEdgePointRef clientNodeEdgePointItem) {
    this.clientNodeEdgePoint.add(clientNodeEdgePointItem);
    return this;
  }

   /**
   * Get clientNodeEdgePoint
   * @return clientNodeEdgePoint
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<NodeEdgePointRef> getClientNodeEdgePoint() {
    return clientNodeEdgePoint;
  }

  public void setClientNodeEdgePoint(List<NodeEdgePointRef> clientNodeEdgePoint) {
    this.clientNodeEdgePoint = clientNodeEdgePoint;
  }

  public ConnectionEndPoint layerProtocolName(LayerProtocolNameEnum layerProtocolName) {
    this.layerProtocolName = layerProtocolName;
    return this;
  }

   /**
   * Get layerProtocolName
   * @return layerProtocolName
  **/
  @ApiModelProperty(example = "null", value = "")
  public LayerProtocolNameEnum getLayerProtocolName() {
    return layerProtocolName;
  }

  public void setLayerProtocolName(LayerProtocolNameEnum layerProtocolName) {
    this.layerProtocolName = layerProtocolName;
  }

  public ConnectionEndPoint aggregatedConnectionEndPoint(List<ConnectionEndPointRef> aggregatedConnectionEndPoint) {
    this.aggregatedConnectionEndPoint = aggregatedConnectionEndPoint;
    return this;
  }

  public ConnectionEndPoint addAggregatedConnectionEndPointItem(ConnectionEndPointRef aggregatedConnectionEndPointItem) {
    this.aggregatedConnectionEndPoint.add(aggregatedConnectionEndPointItem);
    return this;
  }

   /**
   * Get aggregatedConnectionEndPoint
   * @return aggregatedConnectionEndPoint
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<ConnectionEndPointRef> getAggregatedConnectionEndPoint() {
    return aggregatedConnectionEndPoint;
  }

  public void setAggregatedConnectionEndPoint(List<ConnectionEndPointRef> aggregatedConnectionEndPoint) {
    this.aggregatedConnectionEndPoint = aggregatedConnectionEndPoint;
  }

  public ConnectionEndPoint connectionPortDirection(ConnectionPortDirectionEnum connectionPortDirection) {
    this.connectionPortDirection = connectionPortDirection;
    return this;
  }

   /**
   * The orientation of defined flow at the EndPoint.
   * @return connectionPortDirection
  **/
  @ApiModelProperty(example = "null", value = "The orientation of defined flow at the EndPoint.")
  public ConnectionPortDirectionEnum getConnectionPortDirection() {
    return connectionPortDirection;
  }

  public void setConnectionPortDirection(ConnectionPortDirectionEnum connectionPortDirection) {
    this.connectionPortDirection = connectionPortDirection;
  }

  public ConnectionEndPoint parentNodeEdgePoint(NodeEdgePointRef parentNodeEdgePoint) {
    this.parentNodeEdgePoint = parentNodeEdgePoint;
    return this;
  }

   /**
   * Get parentNodeEdgePoint
   * @return parentNodeEdgePoint
  **/
  @ApiModelProperty(example = "null", value = "")
  public NodeEdgePointRef getParentNodeEdgePoint() {
    return parentNodeEdgePoint;
  }

  public void setParentNodeEdgePoint(NodeEdgePointRef parentNodeEdgePoint) {
    this.parentNodeEdgePoint = parentNodeEdgePoint;
  }

  public ConnectionEndPoint connectionPortRole(ConnectionPortRoleEnum connectionPortRole) {
    this.connectionPortRole = connectionPortRole;
    return this;
  }

   /**
   * Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. 
   * @return connectionPortRole
  **/
  @ApiModelProperty(example = "null", value = "Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function. ")
  public ConnectionPortRoleEnum getConnectionPortRole() {
    return connectionPortRole;
  }

  public void setConnectionPortRole(ConnectionPortRoleEnum connectionPortRole) {
    this.connectionPortRole = connectionPortRole;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionEndPoint connectionEndPoint = (ConnectionEndPoint) o;
    return Objects.equals(this.layerProtocolQualifier, connectionEndPoint.layerProtocolQualifier) &&
        Objects.equals(this.clientNodeEdgePoint, connectionEndPoint.clientNodeEdgePoint) &&
        Objects.equals(this.layerProtocolName, connectionEndPoint.layerProtocolName) &&
        Objects.equals(this.aggregatedConnectionEndPoint, connectionEndPoint.aggregatedConnectionEndPoint) &&
        Objects.equals(this.connectionPortDirection, connectionEndPoint.connectionPortDirection) &&
        Objects.equals(this.parentNodeEdgePoint, connectionEndPoint.parentNodeEdgePoint) &&
        Objects.equals(this.connectionPortRole, connectionEndPoint.connectionPortRole);
  }

  @Override
  public int hashCode() {
    return Objects.hash(layerProtocolQualifier, clientNodeEdgePoint, layerProtocolName, aggregatedConnectionEndPoint, connectionPortDirection, parentNodeEdgePoint, connectionPortRole);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionEndPoint {\n");
    
    sb.append("    layerProtocolQualifier: ").append(toIndentedString(layerProtocolQualifier)).append("\n");
    sb.append("    clientNodeEdgePoint: ").append(toIndentedString(clientNodeEdgePoint)).append("\n");
    sb.append("    layerProtocolName: ").append(toIndentedString(layerProtocolName)).append("\n");
    sb.append("    aggregatedConnectionEndPoint: ").append(toIndentedString(aggregatedConnectionEndPoint)).append("\n");
    sb.append("    connectionPortDirection: ").append(toIndentedString(connectionPortDirection)).append("\n");
    sb.append("    parentNodeEdgePoint: ").append(toIndentedString(parentNodeEdgePoint)).append("\n");
    sb.append("    connectionPortRole: ").append(toIndentedString(connectionPortRole)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

