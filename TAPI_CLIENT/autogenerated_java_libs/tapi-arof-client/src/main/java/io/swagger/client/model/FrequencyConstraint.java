/**
 * tapi-arof API
 * tapi-arof API generated from tapi-arof.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * This data-type holds the frequency constraint information in terms of GridType ( FIXED grid (DWDM or CWDM) or FLEX grid) and AdjustmentGranularity.
 */
@ApiModel(description = "This data-type holds the frequency constraint information in terms of GridType ( FIXED grid (DWDM or CWDM) or FLEX grid) and AdjustmentGranularity.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-07T14:21:00.609+02:00")
public class FrequencyConstraint   {
  /**
   * Adjustment granularity in Gigahertz. As per ITU-T G.694.1, it is used to calculate nominal central frequency (in THz)
   */
  public enum AdjustmentGranularityEnum {
    @SerializedName("G_100GHZ")
    G_100GHZ("G_100GHZ"),
    
    @SerializedName("G_50GHZ")
    G_50GHZ("G_50GHZ"),
    
    @SerializedName("G_25GHZ")
    G_25GHZ("G_25GHZ"),
    
    @SerializedName("G_12_5GHZ")
    G_12_5GHZ("G_12_5GHZ"),
    
    @SerializedName("G_6_25GHZ")
    G_6_25GHZ("G_6_25GHZ"),
    
    @SerializedName("G_3_125GHZ")
    G_3_125GHZ("G_3_125GHZ"),
    
    @SerializedName("UNCONSTRAINED")
    UNCONSTRAINED("UNCONSTRAINED");

    private String value;

    AdjustmentGranularityEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("adjustment-granularity")
  private AdjustmentGranularityEnum adjustmentGranularity = null;

  /**
   * Specifies the frequency grid standard used to determine the nominal central frequency and frequency slot width
   */
  public enum GridTypeEnum {
    @SerializedName("DWDM")
    DWDM("DWDM"),
    
    @SerializedName("CWDM")
    CWDM("CWDM"),
    
    @SerializedName("FLEX")
    FLEX("FLEX"),
    
    @SerializedName("GRIDLESS")
    GRIDLESS("GRIDLESS"),
    
    @SerializedName("UNSPECIFIED")
    UNSPECIFIED("UNSPECIFIED");

    private String value;

    GridTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("grid-type")
  private GridTypeEnum gridType = null;

  public FrequencyConstraint adjustmentGranularity(AdjustmentGranularityEnum adjustmentGranularity) {
    this.adjustmentGranularity = adjustmentGranularity;
    return this;
  }

   /**
   * Adjustment granularity in Gigahertz. As per ITU-T G.694.1, it is used to calculate nominal central frequency (in THz)
   * @return adjustmentGranularity
  **/
  @ApiModelProperty(example = "null", value = "Adjustment granularity in Gigahertz. As per ITU-T G.694.1, it is used to calculate nominal central frequency (in THz)")
  public AdjustmentGranularityEnum getAdjustmentGranularity() {
    return adjustmentGranularity;
  }

  public void setAdjustmentGranularity(AdjustmentGranularityEnum adjustmentGranularity) {
    this.adjustmentGranularity = adjustmentGranularity;
  }

  public FrequencyConstraint gridType(GridTypeEnum gridType) {
    this.gridType = gridType;
    return this;
  }

   /**
   * Specifies the frequency grid standard used to determine the nominal central frequency and frequency slot width
   * @return gridType
  **/
  @ApiModelProperty(example = "null", value = "Specifies the frequency grid standard used to determine the nominal central frequency and frequency slot width")
  public GridTypeEnum getGridType() {
    return gridType;
  }

  public void setGridType(GridTypeEnum gridType) {
    this.gridType = gridType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FrequencyConstraint frequencyConstraint = (FrequencyConstraint) o;
    return Objects.equals(this.adjustmentGranularity, frequencyConstraint.adjustmentGranularity) &&
        Objects.equals(this.gridType, frequencyConstraint.gridType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjustmentGranularity, gridType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FrequencyConstraint {\n");
    
    sb.append("    adjustmentGranularity: ").append(toIndentedString(adjustmentGranularity)).append("\n");
    sb.append("    gridType: ").append(toIndentedString(gridType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

