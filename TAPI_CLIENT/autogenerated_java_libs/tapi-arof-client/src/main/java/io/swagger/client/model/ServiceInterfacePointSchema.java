/**
 * tapi-arof API
 * tapi-arof API generated from tapi-arof.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ArofServiceInterfacePointSpec;
import io.swagger.client.model.Capacity;
import io.swagger.client.model.NameAndValue;
import io.swagger.client.model.ServiceInterfacePoint;
import java.util.ArrayList;
import java.util.List;


/**
 * ServiceInterfacePointSchema
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-07T14:21:00.609+02:00")
public class ServiceInterfacePointSchema   {
  @SerializedName("service-interface-point_uuid")
  private String serviceInterfacePointUuid = null;

  /**
   * Gets or Sets administrativeState
   */
  public enum AdministrativeStateEnum {
    @SerializedName("LOCKED")
    LOCKED("LOCKED"),
    
    @SerializedName("UNLOCKED")
    UNLOCKED("UNLOCKED");

    private String value;

    AdministrativeStateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("administrative-state")
  private AdministrativeStateEnum administrativeState = null;

  /**
   * Gets or Sets lifecycleState
   */
  public enum LifecycleStateEnum {
    @SerializedName("PLANNED")
    PLANNED("PLANNED"),
    
    @SerializedName("POTENTIAL_AVAILABLE")
    POTENTIAL_AVAILABLE("POTENTIAL_AVAILABLE"),
    
    @SerializedName("POTENTIAL_BUSY")
    POTENTIAL_BUSY("POTENTIAL_BUSY"),
    
    @SerializedName("INSTALLED")
    INSTALLED("INSTALLED"),
    
    @SerializedName("PENDING_REMOVAL")
    PENDING_REMOVAL("PENDING_REMOVAL");

    private String value;

    LifecycleStateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("lifecycle-state")
  private LifecycleStateEnum lifecycleState = null;

  @SerializedName("name")
  private List<NameAndValue> name = new ArrayList<NameAndValue>();

  /**
   * Gets or Sets operationalState
   */
  public enum OperationalStateEnum {
    @SerializedName("DISABLED")
    DISABLED("DISABLED"),
    
    @SerializedName("ENABLED")
    ENABLED("ENABLED");

    private String value;

    OperationalStateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("operational-state")
  private OperationalStateEnum operationalState = null;

  @SerializedName("arof-service-interface-point-spec")
  private ArofServiceInterfacePointSpec arofServiceInterfacePointSpec = null;

  @SerializedName("available-capacity")
  private Capacity availableCapacity = null;

  @SerializedName("total-potential-capacity")
  private Capacity totalPotentialCapacity = null;

  public ServiceInterfacePointSchema serviceInterfacePointUuid(String serviceInterfacePointUuid) {
    this.serviceInterfacePointUuid = serviceInterfacePointUuid;
    return this;
  }

   /**
   * UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity. UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters. Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6
   * @return serviceInterfacePointUuid
  **/
  @ApiModelProperty(example = "null", value = "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity. UUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters. Pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} Example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6")
  public String getServiceInterfacePointUuid() {
    return serviceInterfacePointUuid;
  }

  public void setServiceInterfacePointUuid(String serviceInterfacePointUuid) {
    this.serviceInterfacePointUuid = serviceInterfacePointUuid;
  }

  public ServiceInterfacePointSchema administrativeState(AdministrativeStateEnum administrativeState) {
    this.administrativeState = administrativeState;
    return this;
  }

   /**
   * Get administrativeState
   * @return administrativeState
  **/
  @ApiModelProperty(example = "null", value = "")
  public AdministrativeStateEnum getAdministrativeState() {
    return administrativeState;
  }

  public void setAdministrativeState(AdministrativeStateEnum administrativeState) {
    this.administrativeState = administrativeState;
  }

  public ServiceInterfacePointSchema lifecycleState(LifecycleStateEnum lifecycleState) {
    this.lifecycleState = lifecycleState;
    return this;
  }

   /**
   * Get lifecycleState
   * @return lifecycleState
  **/
  @ApiModelProperty(example = "null", value = "")
  public LifecycleStateEnum getLifecycleState() {
    return lifecycleState;
  }

  public void setLifecycleState(LifecycleStateEnum lifecycleState) {
    this.lifecycleState = lifecycleState;
  }

  public ServiceInterfacePointSchema name(List<NameAndValue> name) {
    this.name = name;
    return this;
  }

  public ServiceInterfacePointSchema addNameItem(NameAndValue nameItem) {
    this.name.add(nameItem);
    return this;
  }

   /**
   * List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.")
  public List<NameAndValue> getName() {
    return name;
  }

  public void setName(List<NameAndValue> name) {
    this.name = name;
  }

  public ServiceInterfacePointSchema operationalState(OperationalStateEnum operationalState) {
    this.operationalState = operationalState;
    return this;
  }

   /**
   * Get operationalState
   * @return operationalState
  **/
  @ApiModelProperty(example = "null", value = "")
  public OperationalStateEnum getOperationalState() {
    return operationalState;
  }

  public void setOperationalState(OperationalStateEnum operationalState) {
    this.operationalState = operationalState;
  }

  public ServiceInterfacePointSchema arofServiceInterfacePointSpec(ArofServiceInterfacePointSpec arofServiceInterfacePointSpec) {
    this.arofServiceInterfacePointSpec = arofServiceInterfacePointSpec;
    return this;
  }

   /**
   * Get arofServiceInterfacePointSpec
   * @return arofServiceInterfacePointSpec
  **/
  @ApiModelProperty(example = "null", value = "")
  public ArofServiceInterfacePointSpec getArofServiceInterfacePointSpec() {
    return arofServiceInterfacePointSpec;
  }

  public void setArofServiceInterfacePointSpec(ArofServiceInterfacePointSpec arofServiceInterfacePointSpec) {
    this.arofServiceInterfacePointSpec = arofServiceInterfacePointSpec;
  }

  public ServiceInterfacePointSchema availableCapacity(Capacity availableCapacity) {
    this.availableCapacity = availableCapacity;
    return this;
  }

   /**
   * Capacity available to be assigned.
   * @return availableCapacity
  **/
  @ApiModelProperty(example = "null", value = "Capacity available to be assigned.")
  public Capacity getAvailableCapacity() {
    return availableCapacity;
  }

  public void setAvailableCapacity(Capacity availableCapacity) {
    this.availableCapacity = availableCapacity;
  }

  public ServiceInterfacePointSchema totalPotentialCapacity(Capacity totalPotentialCapacity) {
    this.totalPotentialCapacity = totalPotentialCapacity;
    return this;
  }

   /**
   * An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.
   * @return totalPotentialCapacity
  **/
  @ApiModelProperty(example = "null", value = "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken.")
  public Capacity getTotalPotentialCapacity() {
    return totalPotentialCapacity;
  }

  public void setTotalPotentialCapacity(Capacity totalPotentialCapacity) {
    this.totalPotentialCapacity = totalPotentialCapacity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceInterfacePointSchema serviceInterfacePointSchema = (ServiceInterfacePointSchema) o;
    return Objects.equals(this.serviceInterfacePointUuid, serviceInterfacePointSchema.serviceInterfacePointUuid) &&
        Objects.equals(this.administrativeState, serviceInterfacePointSchema.administrativeState) &&
        Objects.equals(this.lifecycleState, serviceInterfacePointSchema.lifecycleState) &&
        Objects.equals(this.name, serviceInterfacePointSchema.name) &&
        Objects.equals(this.operationalState, serviceInterfacePointSchema.operationalState) &&
        Objects.equals(this.arofServiceInterfacePointSpec, serviceInterfacePointSchema.arofServiceInterfacePointSpec) &&
        Objects.equals(this.availableCapacity, serviceInterfacePointSchema.availableCapacity) &&
        Objects.equals(this.totalPotentialCapacity, serviceInterfacePointSchema.totalPotentialCapacity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceInterfacePointUuid, administrativeState, lifecycleState, name, operationalState, arofServiceInterfacePointSpec, availableCapacity, totalPotentialCapacity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceInterfacePointSchema {\n");
    
    sb.append("    serviceInterfacePointUuid: ").append(toIndentedString(serviceInterfacePointUuid)).append("\n");
    sb.append("    administrativeState: ").append(toIndentedString(administrativeState)).append("\n");
    sb.append("    lifecycleState: ").append(toIndentedString(lifecycleState)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    operationalState: ").append(toIndentedString(operationalState)).append("\n");
    sb.append("    arofServiceInterfacePointSpec: ").append(toIndentedString(arofServiceInterfacePointSpec)).append("\n");
    sb.append("    availableCapacity: ").append(toIndentedString(availableCapacity)).append("\n");
    sb.append("    totalPotentialCapacity: ").append(toIndentedString(totalPotentialCapacity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

