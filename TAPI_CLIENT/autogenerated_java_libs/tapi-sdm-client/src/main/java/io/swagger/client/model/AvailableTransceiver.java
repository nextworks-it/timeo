/*
 * tapi-sdm API
 * tapi-sdm API generated from tapi-sdm.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AvailabletransceiverSupportedbandwidth;
import io.swagger.client.model.AvailabletransceiverSupportedcenterfrequencyrange;
import io.swagger.client.model.AvailabletransceiverSupportedmodulationformat;
import java.io.IOException;

/**
 * AvailableTransceiver
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-08T09:23:18.099+02:00")
public class AvailableTransceiver {
  @SerializedName("supported-modulation-format")
  private AvailabletransceiverSupportedmodulationformat supportedModulationFormat = null;

  @SerializedName("transceiver-id")
  private String transceiverId = null;

  @SerializedName("supported-monitoring")
  private String supportedMonitoring = null;

  @SerializedName("supported-center-frequency-range")
  private AvailabletransceiverSupportedcenterfrequencyrange supportedCenterFrequencyRange = null;

  @SerializedName("supported-bandwidth")
  private AvailabletransceiverSupportedbandwidth supportedBandwidth = null;

  @SerializedName("transceiver-type")
  private String transceiverType = null;

  @SerializedName("supported-equalization")
  private String supportedEqualization = null;

  @SerializedName("supported-FEC")
  private String supportedFEC = null;

  public AvailableTransceiver supportedModulationFormat(AvailabletransceiverSupportedmodulationformat supportedModulationFormat) {
    this.supportedModulationFormat = supportedModulationFormat;
    return this;
  }

   /**
   * Get supportedModulationFormat
   * @return supportedModulationFormat
  **/
  @ApiModelProperty(value = "")
  public AvailabletransceiverSupportedmodulationformat getSupportedModulationFormat() {
    return supportedModulationFormat;
  }

  public void setSupportedModulationFormat(AvailabletransceiverSupportedmodulationformat supportedModulationFormat) {
    this.supportedModulationFormat = supportedModulationFormat;
  }

  public AvailableTransceiver transceiverId(String transceiverId) {
    this.transceiverId = transceiverId;
    return this;
  }

   /**
   * Get transceiverId
   * @return transceiverId
  **/
  @ApiModelProperty(value = "")
  public String getTransceiverId() {
    return transceiverId;
  }

  public void setTransceiverId(String transceiverId) {
    this.transceiverId = transceiverId;
  }

  public AvailableTransceiver supportedMonitoring(String supportedMonitoring) {
    this.supportedMonitoring = supportedMonitoring;
    return this;
  }

   /**
   * Get supportedMonitoring
   * @return supportedMonitoring
  **/
  @ApiModelProperty(value = "")
  public String getSupportedMonitoring() {
    return supportedMonitoring;
  }

  public void setSupportedMonitoring(String supportedMonitoring) {
    this.supportedMonitoring = supportedMonitoring;
  }

  public AvailableTransceiver supportedCenterFrequencyRange(AvailabletransceiverSupportedcenterfrequencyrange supportedCenterFrequencyRange) {
    this.supportedCenterFrequencyRange = supportedCenterFrequencyRange;
    return this;
  }

   /**
   * Get supportedCenterFrequencyRange
   * @return supportedCenterFrequencyRange
  **/
  @ApiModelProperty(value = "")
  public AvailabletransceiverSupportedcenterfrequencyrange getSupportedCenterFrequencyRange() {
    return supportedCenterFrequencyRange;
  }

  public void setSupportedCenterFrequencyRange(AvailabletransceiverSupportedcenterfrequencyrange supportedCenterFrequencyRange) {
    this.supportedCenterFrequencyRange = supportedCenterFrequencyRange;
  }

  public AvailableTransceiver supportedBandwidth(AvailabletransceiverSupportedbandwidth supportedBandwidth) {
    this.supportedBandwidth = supportedBandwidth;
    return this;
  }

   /**
   * Get supportedBandwidth
   * @return supportedBandwidth
  **/
  @ApiModelProperty(value = "")
  public AvailabletransceiverSupportedbandwidth getSupportedBandwidth() {
    return supportedBandwidth;
  }

  public void setSupportedBandwidth(AvailabletransceiverSupportedbandwidth supportedBandwidth) {
    this.supportedBandwidth = supportedBandwidth;
  }

  public AvailableTransceiver transceiverType(String transceiverType) {
    this.transceiverType = transceiverType;
    return this;
  }

   /**
   * Get transceiverType
   * @return transceiverType
  **/
  @ApiModelProperty(value = "")
  public String getTransceiverType() {
    return transceiverType;
  }

  public void setTransceiverType(String transceiverType) {
    this.transceiverType = transceiverType;
  }

  public AvailableTransceiver supportedEqualization(String supportedEqualization) {
    this.supportedEqualization = supportedEqualization;
    return this;
  }

   /**
   * Get supportedEqualization
   * @return supportedEqualization
  **/
  @ApiModelProperty(value = "")
  public String getSupportedEqualization() {
    return supportedEqualization;
  }

  public void setSupportedEqualization(String supportedEqualization) {
    this.supportedEqualization = supportedEqualization;
  }

  public AvailableTransceiver supportedFEC(String supportedFEC) {
    this.supportedFEC = supportedFEC;
    return this;
  }

   /**
   * Get supportedFEC
   * @return supportedFEC
  **/
  @ApiModelProperty(value = "")
  public String getSupportedFEC() {
    return supportedFEC;
  }

  public void setSupportedFEC(String supportedFEC) {
    this.supportedFEC = supportedFEC;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvailableTransceiver availableTransceiver = (AvailableTransceiver) o;
    return Objects.equals(this.supportedModulationFormat, availableTransceiver.supportedModulationFormat) &&
        Objects.equals(this.transceiverId, availableTransceiver.transceiverId) &&
        Objects.equals(this.supportedMonitoring, availableTransceiver.supportedMonitoring) &&
        Objects.equals(this.supportedCenterFrequencyRange, availableTransceiver.supportedCenterFrequencyRange) &&
        Objects.equals(this.supportedBandwidth, availableTransceiver.supportedBandwidth) &&
        Objects.equals(this.transceiverType, availableTransceiver.transceiverType) &&
        Objects.equals(this.supportedEqualization, availableTransceiver.supportedEqualization) &&
        Objects.equals(this.supportedFEC, availableTransceiver.supportedFEC);
  }

  @Override
  public int hashCode() {
    return Objects.hash(supportedModulationFormat, transceiverId, supportedMonitoring, supportedCenterFrequencyRange, supportedBandwidth, transceiverType, supportedEqualization, supportedFEC);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvailableTransceiver {\n");
    
    sb.append("    supportedModulationFormat: ").append(toIndentedString(supportedModulationFormat)).append("\n");
    sb.append("    transceiverId: ").append(toIndentedString(transceiverId)).append("\n");
    sb.append("    supportedMonitoring: ").append(toIndentedString(supportedMonitoring)).append("\n");
    sb.append("    supportedCenterFrequencyRange: ").append(toIndentedString(supportedCenterFrequencyRange)).append("\n");
    sb.append("    supportedBandwidth: ").append(toIndentedString(supportedBandwidth)).append("\n");
    sb.append("    transceiverType: ").append(toIndentedString(transceiverType)).append("\n");
    sb.append("    supportedEqualization: ").append(toIndentedString(supportedEqualization)).append("\n");
    sb.append("    supportedFEC: ").append(toIndentedString(supportedFEC)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

