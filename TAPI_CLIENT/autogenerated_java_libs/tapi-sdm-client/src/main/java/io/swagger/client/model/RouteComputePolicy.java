/*
 * tapi-sdm API
 * tapi-sdm API generated from tapi-sdm.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RouteComputePolicy
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-08T09:23:18.099+02:00")
public class RouteComputePolicy {
  /**
   * Gets or Sets diversityPolicy
   */
  @JsonAdapter(DiversityPolicyEnum.Adapter.class)
  public enum DiversityPolicyEnum {
    SRLG("SRLG"),
    
    SRNG("SRNG"),
    
    SNG("SNG"),
    
    NODE("NODE"),
    
    LINK("LINK");

    private String value;

    DiversityPolicyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DiversityPolicyEnum fromValue(String text) {
      for (DiversityPolicyEnum b : DiversityPolicyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DiversityPolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DiversityPolicyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DiversityPolicyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DiversityPolicyEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("diversity-policy")
  private DiversityPolicyEnum diversityPolicy = null;

  /**
   * Gets or Sets routeObjectiveFunction
   */
  @JsonAdapter(RouteObjectiveFunctionEnum.Adapter.class)
  public enum RouteObjectiveFunctionEnum {
    MIN_WORK_ROUTE_HOP("MIN_WORK_ROUTE_HOP"),
    
    MIN_WORK_ROUTE_COST("MIN_WORK_ROUTE_COST"),
    
    MIN_WORK_ROUTE_LATENCY("MIN_WORK_ROUTE_LATENCY"),
    
    MIN_SUM_OF_WORK_AND_PROTECTION_ROUTE_HOP("MIN_SUM_OF_WORK_AND_PROTECTION_ROUTE_HOP"),
    
    MIN_SUM_OF_WORK_AND_PROTECTION_ROUTE_COST("MIN_SUM_OF_WORK_AND_PROTECTION_ROUTE_COST"),
    
    MIN_SUM_OF_WORK_AND_PROTECTION_ROUTE_LATENCY("MIN_SUM_OF_WORK_AND_PROTECTION_ROUTE_LATENCY"),
    
    LOAD_BALANCE_MAX_UNUSED_CAPACITY("LOAD_BALANCE_MAX_UNUSED_CAPACITY");

    private String value;

    RouteObjectiveFunctionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RouteObjectiveFunctionEnum fromValue(String text) {
      for (RouteObjectiveFunctionEnum b : RouteObjectiveFunctionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RouteObjectiveFunctionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RouteObjectiveFunctionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RouteObjectiveFunctionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RouteObjectiveFunctionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("route-objective-function")
  private RouteObjectiveFunctionEnum routeObjectiveFunction = null;

  public RouteComputePolicy diversityPolicy(DiversityPolicyEnum diversityPolicy) {
    this.diversityPolicy = diversityPolicy;
    return this;
  }

   /**
   * Get diversityPolicy
   * @return diversityPolicy
  **/
  @ApiModelProperty(value = "")
  public DiversityPolicyEnum getDiversityPolicy() {
    return diversityPolicy;
  }

  public void setDiversityPolicy(DiversityPolicyEnum diversityPolicy) {
    this.diversityPolicy = diversityPolicy;
  }

  public RouteComputePolicy routeObjectiveFunction(RouteObjectiveFunctionEnum routeObjectiveFunction) {
    this.routeObjectiveFunction = routeObjectiveFunction;
    return this;
  }

   /**
   * Get routeObjectiveFunction
   * @return routeObjectiveFunction
  **/
  @ApiModelProperty(value = "")
  public RouteObjectiveFunctionEnum getRouteObjectiveFunction() {
    return routeObjectiveFunction;
  }

  public void setRouteObjectiveFunction(RouteObjectiveFunctionEnum routeObjectiveFunction) {
    this.routeObjectiveFunction = routeObjectiveFunction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteComputePolicy routeComputePolicy = (RouteComputePolicy) o;
    return Objects.equals(this.diversityPolicy, routeComputePolicy.diversityPolicy) &&
        Objects.equals(this.routeObjectiveFunction, routeComputePolicy.routeObjectiveFunction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diversityPolicy, routeObjectiveFunction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteComputePolicy {\n");
    
    sb.append("    diversityPolicy: ").append(toIndentedString(diversityPolicy)).append("\n");
    sb.append("    routeObjectiveFunction: ").append(toIndentedString(routeObjectiveFunction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

