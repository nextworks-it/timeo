/*
 * tapi-sdm API
 * tapi-sdm API generated from tapi-sdm.yang
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.NominalCentralFrequencyOrWavelength;
import java.io.IOException;

/**
 * The frequency range allocated to a slot and unavailable to other slots within a flexible grid. A frequency slot is defined by its nominal central frequency. As per ITU-T G.694.1  the slot width is calculated as follows: 12.5 × &lt;slotWidthNumber&gt; where slotWidthNumber is a positive integer and 12.5 is the slot width granularity in GHz
 */
@ApiModel(description = "The frequency range allocated to a slot and unavailable to other slots within a flexible grid. A frequency slot is defined by its nominal central frequency. As per ITU-T G.694.1  the slot width is calculated as follows: 12.5 × <slotWidthNumber> where slotWidthNumber is a positive integer and 12.5 is the slot width granularity in GHz")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-08T09:23:18.099+02:00")
public class FrequencySlot {
  @SerializedName("slot-width-number")
  private String slotWidthNumber = null;

  @SerializedName("nominal-central-frequency")
  private NominalCentralFrequencyOrWavelength nominalCentralFrequency = null;

  @SerializedName("slot-id")
  private String slotId = null;

  public FrequencySlot slotWidthNumber(String slotWidthNumber) {
    this.slotWidthNumber = slotWidthNumber;
    return this;
  }

   /**
   * As per ITU-T G.694.1, this attribute is denoted as &#39;m&#39; and is used to calculate the slot width (in GHz) as follows: 12.5 × m where m is a positive integer and 12.5 is the slot width granularity in GHz.
   * @return slotWidthNumber
  **/
  @ApiModelProperty(value = "As per ITU-T G.694.1, this attribute is denoted as 'm' and is used to calculate the slot width (in GHz) as follows: 12.5 × m where m is a positive integer and 12.5 is the slot width granularity in GHz.")
  public String getSlotWidthNumber() {
    return slotWidthNumber;
  }

  public void setSlotWidthNumber(String slotWidthNumber) {
    this.slotWidthNumber = slotWidthNumber;
  }

  public FrequencySlot nominalCentralFrequency(NominalCentralFrequencyOrWavelength nominalCentralFrequency) {
    this.nominalCentralFrequency = nominalCentralFrequency;
    return this;
  }

   /**
   * Get nominalCentralFrequency
   * @return nominalCentralFrequency
  **/
  @ApiModelProperty(value = "")
  public NominalCentralFrequencyOrWavelength getNominalCentralFrequency() {
    return nominalCentralFrequency;
  }

  public void setNominalCentralFrequency(NominalCentralFrequencyOrWavelength nominalCentralFrequency) {
    this.nominalCentralFrequency = nominalCentralFrequency;
  }

  public FrequencySlot slotId(String slotId) {
    this.slotId = slotId;
    return this;
  }

   /**
   * Get slotId
   * @return slotId
  **/
  @ApiModelProperty(value = "")
  public String getSlotId() {
    return slotId;
  }

  public void setSlotId(String slotId) {
    this.slotId = slotId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FrequencySlot frequencySlot = (FrequencySlot) o;
    return Objects.equals(this.slotWidthNumber, frequencySlot.slotWidthNumber) &&
        Objects.equals(this.nominalCentralFrequency, frequencySlot.nominalCentralFrequency) &&
        Objects.equals(this.slotId, frequencySlot.slotId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(slotWidthNumber, nominalCentralFrequency, slotId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FrequencySlot {\n");
    
    sb.append("    slotWidthNumber: ").append(toIndentedString(slotWidthNumber)).append("\n");
    sb.append("    nominalCentralFrequency: ").append(toIndentedString(nominalCentralFrequency)).append("\n");
    sb.append("    slotId: ").append(toIndentedString(slotId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

